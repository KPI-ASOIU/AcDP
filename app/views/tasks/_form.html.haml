= form_for(task, :html => { :class => "ui error blue form segment", id: "taskActions" }) do |f|
  - if task.errors.any?
    #error_explanation
      %h2= t('activerecord.errors.template.header', count: @user.errors.count)
      %ul.error.message
        = task.errors.full_messages.each do |msg|
          %li= msg
  
  %h2.ui.header
    = header
  .field
    = f.label t('tasks.name')
    = f.text_field :name, :placeholder => t('tasks.name') + '...'
  .field
    = f.label t('tasks.description')
    = f.text_area :description, :placeholder => t('tasks.description') + '...', :class => 'no-resize'
  .ui.date.field
    = f.label t('tasks.end_date')
    = f.text_field :end_date, :placeholder => t('tasks.end_date') + '...', class: "date", id: "taskDate"
  .field
    = f.label t('tasks.status')
    = f.select :status, options_for_select(Task::STATUS.map { |t| [translate_status(t), t]}, task.status), {}, { class: "chosen-select" }
  .field
    = f.label t('tasks.check_list')
    = render partial: 'form_checklist', locals: { f: f } 
  .field
    = f.label t('tasks.executors')
    = select_tag :executors, options_for_select(User.where.not(role: [User.roles_to_int(['student']), '']).map { |u| [u.full_name, u.id] }, task.executors.pluck(:id)), { class: "chosen-select", multiple: true, include_blank: true }
  .field
    = f.label t('tasks.documents')
    .ui.action.input
      = text_field_tag :document, nil, :placeholder => t('tasks.documents') + '...'
      .ui.teal.icon.button{ id: 'addDocumentToTask', placeholder: t('documents.add_doc') }
        %i.upload.icon
  .inline.field.ui.buttons
    = link_to t('util.back'), :back, :class => "ui button"
    .or
    = f.submit :class => "ui positive submit button", :value => val

= render partial: 'doc_task_modal', locals: { modal_title: t('documents.document') }